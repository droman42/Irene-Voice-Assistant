[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "irene-voice-assistant"
version = "13.0.0"
description = "Irene - Modern async voice assistant with optional components. Supports plugins and flexible deployment."
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Core async framework (minimal dependencies)
    "python-dateutil>=2.8.0", # Fixed: Updated to be compatible with pandas/matplotlib
    # Configuration and validation (now required)
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "tomli>=1.2.0; python_version<'3.11'", # tomllib is built-in for 3.11+
    "tomli-w>=1.0.0", # For TOML writing support
    # Logging and utilities
    "termcolor>=1.1.0",
    # NLU fuzzy matching (JSON donation system requirement)
    "rapidfuzz>=3.0.0",
    "jsonschema>=4.25.0",
]

[project.optional-dependencies]
# Audio input components
audio-input = [
    "vosk>=0.3.45",
    "sounddevice>=0.4.0",
    "soundfile>=0.12.0"
]

# Advanced ASR providers
advanced-asr = [
    "openai-whisper>=20230314",
    "torch>=1.13.0",  # Required by Whisper
    "torchaudio>=0.13.0"  # Required by Whisper
]

# Enhanced audio input with cloud providers
audio-input-enhanced = [
    "irene-voice-assistant[audio-input,cloud-asr]"
]

# Complete audio input with all ASR providers
audio-input-complete = [
    "irene-voice-assistant[audio-input,cloud-asr,advanced-asr]"
]

# TTS output components
tts = [
    "pyttsx3>=2.90",
    "elevenlabs>=1.0.3",
    "httpx>=0.25.0",
]

# Audio output components
audio-output = [
    "sounddevice>=0.4.0",
    "soundfile>=0.12.0",
    "audioplayer>=0.6.0",
    # "simpleaudio>=1.0.4",  # Temporarily disabled due to compilation issues with custom OpenSSL
    "numpy>=1.21.0",
]

# Voice trigger (wake word detection)
voice-trigger = [
    "openwakeword>=0.6.0",
    "numpy>=1.21.0",
    "tflite-runtime>=2.12.0",  # Lightweight runtime for microWakeWord (~50MB vs ~800MB tensorflow)
]

# Web API components
web-api = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "websockets>=11.0.0",
]

# Cloud ASR components
cloud-asr = [
    "google-cloud-speech>=2.20.0",
    "google-auth>=2.17.0",
]

# LLM (Large Language Model) components
llm = [
    "openai>=1.0.0",
    "anthropic>=0.25.0",
]

# Configuration management
config-writing = [
    # tomli-w moved to core dependencies
]

# Text processing and multilingual support - Fixed: Reference specific commit with python-dateutil fix
text-multilingual = [
    "lingua-franca @ git+https://github.com/MycroftAI/lingua-franca.git@5bfd75fe5996fd364102a0eec3f714c9ddc9275c",
    "runorm>=0.1.0",
    "eng-to-ipa>=0.0.2",
]

# Wake word training and model development
wake-word-training = [
    # Audio processing and recording
    "sounddevice>=0.4.6",
    "soundfile>=0.12.1",
    "numpy>=1.21.0",
    
    # Machine learning (for TensorFlow training)
    "tensorflow>=2.12.0",
    "librosa>=0.10.0",
    "scipy>=1.9.0",
    
    # Model conversion and export
    "tf2onnx>=1.15.0",
    "onnx>=1.14.0",
    
    # Data processing and visualization - Fixed: Removed restrictive matplotlib constraint
    "pandas>=1.5.0",
    "matplotlib>=3.6.0",  # Fixed: Removed upper bound constraint
    "seaborn>=0.12.0",
    
    # Audio utilities
    "pydub>=0.25.1",
    
    # Progress tracking and configuration
    "tqdm>=4.64.0",
    "pyyaml>=6.0",
]

# Development dependencies - Fixed: Removed duplication
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0", 
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy==1.15.0",  # Pinned to match wb-mqtt-bridge version
]

# Convenience groups - Fixed: Re-enabled with proper dependencies
# Full voice assistant
voice = [
    "irene-voice-assistant[audio-input,tts,audio-output,voice-trigger,web-api,text-multilingual,config-writing]"
]

# API server only
api = [
    "irene-voice-assistant[web-api,config-writing]"
]

# Headless mode (text processing only)
headless = [
    "irene-voice-assistant[config-writing]"
]

# All optional components - Fixed: Re-enabled
all = [
    "irene-voice-assistant[voice,cloud-asr,advanced-asr,llm,wake-word-training]"
]

[project.scripts]
# Wake word training tools
irene-record-samples = "wake_word_training.scripts.record_samples:main"
irene-validate-model = "wake_word_training.scripts.validate_model:main"
irene-train-wake-word = "wake_word_training.scripts.tensorflow_trainer:main"

# Multi-target model converters
irene-convert-to-esp32 = "wake_word_training.scripts.converters.to_esp32:main"
irene-convert-to-onnx = "wake_word_training.scripts.converters.to_onnx:main"
irene-convert-to-tflite = "wake_word_training.scripts.converters.to_tflite:main"

# ============================================================
# ENTRY-POINTS CATALOG - Provider Discovery System
# ============================================================
# Entry-points catalog for dynamic provider discovery.
# This replaces hardcoded _provider_classes dictionaries and enables:
# - Configuration-driven loading
# - External package extensibility
# - Build-time optimization
# - Dynamic discovery without hardcoded imports

[project.entry-points."irene.providers.audio"]
console = "irene.providers.audio.console:ConsoleAudioProvider"
sounddevice = "irene.providers.audio.sounddevice:SoundDeviceAudioProvider"
audioplayer = "irene.providers.audio.audioplayer:AudioPlayerAudioProvider"
aplay = "irene.providers.audio.aplay:AplayAudioProvider"
simpleaudio = "irene.providers.audio.simpleaudio:SimpleAudioProvider"

[project.entry-points."irene.providers.tts"]
console = "irene.providers.tts.console:ConsoleTTSProvider"
pyttsx = "irene.providers.tts.pyttsx:PyttsTTSProvider"
silero_v3 = "irene.providers.tts.silero_v3:SileroV3TTSProvider"
silero_v4 = "irene.providers.tts.silero_v4:SileroV4TTSProvider"
vosk_tts = "irene.providers.tts.vosk:VoskTTSProvider"
elevenlabs = "irene.providers.tts.elevenlabs:ElevenLabsTTSProvider"

[project.entry-points."irene.providers.asr"]
vosk = "irene.providers.asr.vosk:VoskASRProvider"
whisper = "irene.providers.asr.whisper:WhisperASRProvider"
google_cloud = "irene.providers.asr.google_cloud:GoogleCloudASRProvider"

[project.entry-points."irene.providers.llm"]
openai = "irene.providers.llm.openai:OpenAILLMProvider"
vsegpt = "irene.providers.llm.vsegpt:VseGPTLLMProvider"
anthropic = "irene.providers.llm.anthropic:AnthropicLLMProvider"

[project.entry-points."irene.providers.voice_trigger"]
openwakeword = "irene.providers.voice_trigger.openwakeword:OpenWakeWordProvider"
microwakeword = "irene.providers.voice_trigger.microwakeword:MicroWakeWordProvider"

[project.entry-points."irene.providers.nlu"]
keyword_matcher = "irene.providers.nlu.hybrid_keyword_matcher:HybridKeywordMatcherProvider"
rule_based = "irene.providers.nlu.rule_based:RuleBasedNLUProvider"
spacy_rules_sm = "irene.providers.nlu.spacy_provider:SpaCyNLUProvider"
spacy_semantic_md = "irene.providers.nlu.spacy_provider:SpaCyNLUProvider"

[project.entry-points."irene.providers.text_processing"]
# Stage-specific providers (TODO #2 implementation)
asr_text_processor = "irene.providers.text_processing.asr_text_processor:ASRTextProcessor"
general_text_processor = "irene.providers.text_processing.general_text_processor:GeneralTextProcessor"
tts_text_processor = "irene.providers.text_processing.tts_text_processor:TTSTextProcessor"
number_text_processor = "irene.providers.text_processing.number_text_processor:NumberTextProcessor"

[project.entry-points."irene.components"]
tts = "irene.components.tts_component:TTSComponent"
asr = "irene.components.asr_component:ASRComponent"
llm = "irene.components.llm_component:LLMComponent"
audio = "irene.components.audio_component:AudioComponent"
voice_trigger = "irene.components.voice_trigger_component:VoiceTriggerComponent"
nlu = "irene.components.nlu_component:NLUComponent"
text_processor = "irene.components.text_processor_component:TextProcessorComponent"
intent_system = "irene.components.intent_component:IntentComponent"

[project.entry-points."irene.workflows"]
voice_assistant = "irene.workflows.voice_assistant:VoiceAssistantWorkflow"
continuous_listening = "irene.workflows.continuous_listening:ContinuousListeningWorkflow"

[project.entry-points."irene.intents.handlers"]
conversation = "irene.intents.handlers.conversation:ConversationIntentHandler"
greetings = "irene.intents.handlers.greetings:GreetingsIntentHandler"
timer = "irene.intents.handlers.timer:TimerIntentHandler"
datetime = "irene.intents.handlers.datetime:DateTimeIntentHandler"
system = "irene.intents.handlers.system:SystemIntentHandler"
train_schedule = "irene.intents.handlers.train_schedule:TrainScheduleIntentHandler"

[project.entry-points."irene.inputs"]
cli = "irene.inputs.cli:CLIInput"
microphone = "irene.inputs.microphone:MicrophoneInput"
web = "irene.inputs.web:WebInput"

[project.entry-points."irene.outputs"]
text = "irene.outputs.text:TextOutput"
tts = "irene.outputs.tts:TTSOutput"
web = "irene.outputs.web:WebOutput"

[project.entry-points."irene.plugins.builtin"]
random_plugin = "irene.plugins.builtin.random_plugin:RandomPlugin"
async_service_demo = "irene.plugins.builtin.async_service_demo:AsyncServiceDemoPlugin"

[project.entry-points."irene.runners"]
cli = "irene.runners.cli:CLIRunner"
vosk = "irene.runners.vosk_runner:VoskRunner"
webapi = "irene.runners.webapi_runner:WebAPIRunner"
settings = "irene.runners.settings_runner:SettingsManagerRunner"

[tool.setuptools.packages.find]
where = ["."]
include = ["irene*", "wake_word_training*"]
# Fixed: Removed references to non-existent directories
exclude = []

# Fixed: Removed duplicate dev-dependencies section
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
# Fixed: Removed references to non-existent directories
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
# Basic settings - detailed configuration in mypy.ini (matching wb-mqtt-bridge)
python_version = "3.11"

[tool.pyright]
# Pylance configuration to match mypy.ini relaxed settings
include = ["irene"]
pythonVersion = "3.11"
typeCheckingMode = "basic"
reportMissingTypeStubs = false
reportUnknownParameterType = false
reportUnknownArgumentType = false
reportUnknownVariableType = false
reportUnknownMemberType = false
reportArgumentType = false
reportAssignmentType = false
reportAttributeAccessIssue = false
reportGeneralTypeIssues = false
reportIndexIssue = false

[dependency-groups]
dev = [
    "mypy==1.15.0",
    "types-beautifulsoup4>=4.12.0.20250516",
    "types-pillow>=10.2.0.20240822",
    "types-pyyaml>=6.0.12.20250516",
    "types-requests>=2.32.4.20250611",
    "types-setuptools>=80.9.0.20250801",
    "types-urllib3>=1.26.25.14",
]
