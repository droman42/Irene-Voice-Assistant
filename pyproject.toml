[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "irene-voice-assistant"
version = "13.0.0"
description = "Irene - Modern async voice assistant with optional components. Supports plugins and flexible deployment."
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Core async framework (minimal dependencies)
    "python-dateutil>=2.6.0",
    # Configuration and validation (now required)
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "tomli>=1.2.0; python_version<'3.11'", # tomllib is built-in for 3.11+
    "tomli-w>=1.0.0", # For TOML writing support
    # Logging and utilities
    "termcolor>=1.1.0",
]

[project.optional-dependencies]
# Audio input components
audio-input = [
    "vosk>=0.3.45",
    "sounddevice>=0.4.0",
    "soundfile>=0.12.0"
]

# Advanced ASR providers
advanced-asr = [
    "openai-whisper>=20230314",
    "torch>=1.13.0",  # Required by Whisper
    "torchaudio>=0.13.0"  # Required by Whisper
]

# Enhanced audio input with cloud providers
audio-input-enhanced = [
    "irene-voice-assistant[audio-input,cloud-asr]"
]

# Complete audio input with all ASR providers
audio-input-complete = [
    "irene-voice-assistant[audio-input,cloud-asr,advanced-asr]"
]

# TTS output components
tts = [
    "pyttsx3>=2.90",
    "elevenlabs>=1.0.3",
]

# Audio output components
audio-output = [
    "sounddevice>=0.4.0",
    "soundfile>=0.12.0",
    "audioplayer>=0.6.0",
]

# Web API components
web-api = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "websockets>=11.0.0",
]

# Cloud ASR components
cloud-asr = [
    "google-cloud-speech>=2.20.0",
    "google-auth>=2.17.0",
]

# Configuration management
config-writing = [
    # tomli-w moved to core dependencies
]

# Text processing and multilingual support
text-multilingual = [ # Mycroft AI's multilingual text processing
]

# Full voice assistant
voice = [
    "irene-voice-assistant[audio-input,tts,audio-output,web-api,text-multilingual,config-writing]"
]

# API server only
api = [
    "irene-voice-assistant[web-api,config-writing]"
]

# Headless mode (text processing only)
headless = [
    "irene-voice-assistant[config-writing]"
]

# All optional components  
all = [
    "irene-voice-assistant[voice,cloud-asr,advanced-asr]"  # voice already includes text-multilingual
]

# Legacy v12 compatibility
v12-compat = [
    "vosk>=0.3.45",
    "vosk-tts>=0.3.52", 
    "sounddevice",
    "soundfile",
    "audioplayer",
    "pyttsx3>=2.90",
    "requests", 
    "wikipedia-api>=0.5.4",
    "openai==0.28.0",
    "elevenlabs==1.0.3",
    "pyautogui",
    "fsspec==2023.1.0",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0", 
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["irene*"]
exclude = [
    "model*",
    "media*", 
    "mpcapi*",
    "plugins*",
    "eng_to_ipa*",
    "mic_client*",
    "plugins_vasi*",
    "webapi_client*",
    "options_docker*",
    "docker_plugins*",
    "plugins_inactive*"
]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0", 
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy>=0.900",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | eng_to_ipa
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "eng_to_ipa/",
    "model/",
]
